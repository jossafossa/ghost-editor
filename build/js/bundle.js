/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/js/bundle.js":
/*!*****************************!*\
  !*** ./assets/js/bundle.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _editor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./editor.js */ \"./assets/js/editor.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\nfunction docReady(fn) {\n  // see if DOM is already available\n  if (document.readyState === \"complete\" || document.readyState === \"interactive\") {\n    // call on next available tick\n    setTimeout(fn, 1);\n  } else {\n    document.addEventListener(\"DOMContentLoaded\", fn);\n  }\n}\n\ndocReady(function (e) {\n  window.editor = new _editor_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n}); // scroll drag\n\nvar ele = document.querySelector('.tilemap');\nele.style.cursor = 'grab';\nvar pos = {\n  top: 0,\n  left: 0,\n  x: 0,\n  y: 0\n};\n\nvar mouseDownHandler = function mouseDownHandler(e) {\n  ele.style.cursor = 'grabbing';\n  ele.style.userSelect = 'none';\n  pos = {\n    left: ele.scrollLeft,\n    top: ele.scrollTop,\n    // Get the current mouse position\n    x: e.clientX,\n    y: e.clientY\n  };\n  document.addEventListener('mousemove', mouseMoveHandler);\n  document.addEventListener('mouseup', mouseUpHandler);\n};\n\nvar mouseMoveHandler = function mouseMoveHandler(e) {\n  if (!window.editor.placeActive) {\n    // How far the mouse has been moved\n    var dx = e.clientX - pos.x;\n    var dy = e.clientY - pos.y; // Scroll the element\n\n    ele.scrollTop = pos.top - dy;\n    ele.scrollLeft = pos.left - dx;\n  }\n};\n\nvar mouseUpHandler = function mouseUpHandler() {\n  ele.style.cursor = 'grab';\n  ele.style.removeProperty('user-select');\n  document.removeEventListener('mousemove', mouseMoveHandler);\n  document.removeEventListener('mouseup', mouseUpHandler);\n}; // Attach the handler\n\n\nele.addEventListener('mousedown', mouseDownHandler);\nvar sidebarButtons = document.querySelectorAll(\".sidebar-button\");\n\nvar _iterator = _createForOfIteratorHelper(sidebarButtons),\n    _step;\n\ntry {\n  var _loop = function _loop() {\n    var button = _step.value;\n    var sidebar = button.closest(\".sidebar\");\n\n    if (sidebar) {\n      button.addEventListener(\"click\", function (e) {\n        sidebar.classList.toggle(\"is-open\");\n      });\n    }\n  };\n\n  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n    _loop();\n  }\n} catch (err) {\n  _iterator.e(err);\n} finally {\n  _iterator.f();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEVBUUE7OztBQUNBaEIsR0FBRyxDQUFDSixnQkFBSixDQUFxQixXQUFyQixFQUFrQ2EsZ0JBQWxDO0FBR0EsSUFBSWEsY0FBYyxHQUFHN0IsUUFBUSxDQUFDOEIsZ0JBQVQsQ0FBMEIsaUJBQTFCLENBQXJCOzsyQ0FDbUJEOzs7OztRQUFWRTtBQUNQLFFBQUlDLE9BQU8sR0FBR0QsTUFBTSxDQUFDRSxPQUFQLENBQWUsVUFBZixDQUFkOztBQUNBLFFBQUlELE9BQUosRUFBYTtBQUNYRCxNQUFBQSxNQUFNLENBQUM1QixnQkFBUCxDQUF3QixPQUF4QixFQUFpQyxVQUFBQyxDQUFDLEVBQUk7QUFDcEM0QixRQUFBQSxPQUFPLENBQUNFLFNBQVIsQ0FBa0JDLE1BQWxCLENBQXlCLFNBQXpCO0FBQ0QsT0FGRDtBQUdEOzs7QUFOSCxzREFBbUM7QUFBQTtBQU9sQyIsInNvdXJjZXMiOlsid2VicGFjazovL21hcC12aWV3ZXIvLi9hc3NldHMvanMvYnVuZGxlLmpzPzQyYzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEVkaXRvciBmcm9tIFwiLi9lZGl0b3IuanNcIjtcclxuXHJcblxyXG5mdW5jdGlvbiBkb2NSZWFkeShmbikge1xyXG4gIC8vIHNlZSBpZiBET00gaXMgYWxyZWFkeSBhdmFpbGFibGVcclxuICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gXCJjb21wbGV0ZVwiIHx8IGRvY3VtZW50LnJlYWR5U3RhdGUgPT09IFwiaW50ZXJhY3RpdmVcIikge1xyXG4gICAgLy8gY2FsbCBvbiBuZXh0IGF2YWlsYWJsZSB0aWNrXHJcbiAgICBzZXRUaW1lb3V0KGZuLCAxKTtcclxuICB9IGVsc2Uge1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgZm4pO1xyXG4gIH1cclxufSAgICBcclxuXHJcbmRvY1JlYWR5KGUgPT4ge1xyXG4gIFxyXG4gIHdpbmRvdy5lZGl0b3IgPSBuZXcgRWRpdG9yKCk7XHJcblxyXG5cclxufSlcclxuXHJcblxyXG5cclxuXHJcbi8vIHNjcm9sbCBkcmFnXHJcbmNvbnN0IGVsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50aWxlbWFwJyk7XHJcbmVsZS5zdHlsZS5jdXJzb3IgPSAnZ3JhYic7XHJcblxyXG5sZXQgcG9zID0geyB0b3A6IDAsIGxlZnQ6IDAsIHg6IDAsIHk6IDAgfTtcclxuXHJcbmNvbnN0IG1vdXNlRG93bkhhbmRsZXIgPSBmdW5jdGlvbiAoZSkge1xyXG4gICAgZWxlLnN0eWxlLmN1cnNvciA9ICdncmFiYmluZyc7XHJcbiAgICBlbGUuc3R5bGUudXNlclNlbGVjdCA9ICdub25lJztcclxuXHJcbiAgICBwb3MgPSB7XHJcbiAgICAgICAgbGVmdDogZWxlLnNjcm9sbExlZnQsXHJcbiAgICAgICAgdG9wOiBlbGUuc2Nyb2xsVG9wLFxyXG4gICAgICAgIC8vIEdldCB0aGUgY3VycmVudCBtb3VzZSBwb3NpdGlvblxyXG4gICAgICAgIHg6IGUuY2xpZW50WCxcclxuICAgICAgICB5OiBlLmNsaWVudFksXHJcbiAgICB9O1xyXG5cclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIG1vdXNlTW92ZUhhbmRsZXIpO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIG1vdXNlVXBIYW5kbGVyKTtcclxufTtcclxuXHJcbmNvbnN0IG1vdXNlTW92ZUhhbmRsZXIgPSBmdW5jdGlvbiAoZSkge1xyXG4gIGlmICghd2luZG93LmVkaXRvci5wbGFjZUFjdGl2ZSkge1xyXG5cclxuICAgIC8vIEhvdyBmYXIgdGhlIG1vdXNlIGhhcyBiZWVuIG1vdmVkXHJcbiAgICBjb25zdCBkeCA9IGUuY2xpZW50WCAtIHBvcy54O1xyXG4gICAgY29uc3QgZHkgPSBlLmNsaWVudFkgLSBwb3MueTtcclxuICAgIFxyXG4gICAgLy8gU2Nyb2xsIHRoZSBlbGVtZW50XHJcbiAgICBlbGUuc2Nyb2xsVG9wID0gcG9zLnRvcCAtIGR5O1xyXG4gICAgZWxlLnNjcm9sbExlZnQgPSBwb3MubGVmdCAtIGR4O1xyXG4gIH1cclxufTtcclxuXHJcbmNvbnN0IG1vdXNlVXBIYW5kbGVyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgZWxlLnN0eWxlLmN1cnNvciA9ICdncmFiJztcclxuICAgIGVsZS5zdHlsZS5yZW1vdmVQcm9wZXJ0eSgndXNlci1zZWxlY3QnKTtcclxuXHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBtb3VzZU1vdmVIYW5kbGVyKTtcclxuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBtb3VzZVVwSGFuZGxlcik7XHJcbn07XHJcblxyXG4vLyBBdHRhY2ggdGhlIGhhbmRsZXJcclxuZWxlLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIG1vdXNlRG93bkhhbmRsZXIpO1xyXG5cclxuXHJcbmxldCBzaWRlYmFyQnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuc2lkZWJhci1idXR0b25cIik7XHJcbmZvciAobGV0IGJ1dHRvbiBvZiBzaWRlYmFyQnV0dG9ucykge1xyXG4gIGxldCBzaWRlYmFyID0gYnV0dG9uLmNsb3Nlc3QoXCIuc2lkZWJhclwiKTtcclxuICBpZiAoc2lkZWJhcikge1xyXG4gICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBlID0+IHtcclxuICAgICAgc2lkZWJhci5jbGFzc0xpc3QudG9nZ2xlKFwiaXMtb3BlblwiKTtcclxuICAgIH0pXHJcbiAgfVxyXG59XHJcblxyXG4iXSwibmFtZXMiOlsiRWRpdG9yIiwiZG9jUmVhZHkiLCJmbiIsImRvY3VtZW50IiwicmVhZHlTdGF0ZSIsInNldFRpbWVvdXQiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsIndpbmRvdyIsImVkaXRvciIsImVsZSIsInF1ZXJ5U2VsZWN0b3IiLCJzdHlsZSIsImN1cnNvciIsInBvcyIsInRvcCIsImxlZnQiLCJ4IiwieSIsIm1vdXNlRG93bkhhbmRsZXIiLCJ1c2VyU2VsZWN0Iiwic2Nyb2xsTGVmdCIsInNjcm9sbFRvcCIsImNsaWVudFgiLCJjbGllbnRZIiwibW91c2VNb3ZlSGFuZGxlciIsIm1vdXNlVXBIYW5kbGVyIiwicGxhY2VBY3RpdmUiLCJkeCIsImR5IiwicmVtb3ZlUHJvcGVydHkiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwic2lkZWJhckJ1dHRvbnMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiYnV0dG9uIiwic2lkZWJhciIsImNsb3Nlc3QiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./assets/js/bundle.js\n");

/***/ }),

/***/ "./assets/js/defaultMap.js":
/*!*********************************!*\
  !*** ./assets/js/defaultMap.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"1 -6 0 0 0 0 tile-4_0\\n2 -6 0 0 0 0 tile-4_1\\n1 -7 0 0 0 0 tile-4_2\\n2 -7 0 0 0 0 tile-4_3\\n3 -7 0 0 0 0 tile-4_4\\n1 -8 0 0 0 0 tile-4_5\\n2 -8 0 0 0 0 tile-4_6\\n3 -8 0 0 0 0 tile-4_7\\n3 -1 1 0 0 0 tile-4_0\\n3 -2 1 0 0 0 tile-4_1\\n2 -1 1 0 0 0 tile-4_2\\n2 -2 1 0 0 0 tile-4_3\\n2 -3 1 0 0 0 tile-4_4\\n1 -1 1 0 0 0 tile-4_5\\n1 -2 1 0 0 0 tile-4_6\\n1 -3 1 0 0 0 tile-4_7\\n8 -3 2 0 0 0 tile-4_0\\n7 -3 2 0 0 0 tile-4_1\\n8 -2 2 0 0 0 tile-4_2\\n7 -2 2 0 0 0 tile-4_3\\n6 -2 2 0 0 0 tile-4_4\\n8 -1 2 0 0 0 tile-4_5\\n7 -1 2 0 0 0 tile-4_6\\n6 -1 2 0 0 0 tile-4_7\\n6 -8 3 0 0 0 tile-4_0\\n6 -7 3 0 0 0 tile-4_1\\n7 -8 3 0 0 0 tile-4_2\\n7 -7 3 0 0 0 tile-4_3\\n7 -6 3 0 0 0 tile-4_4\\n8 -8 3 0 0 0 tile-4_5\\n8 -7 3 0 0 0 tile-4_6\\n8 -6 3 0 0 0 tile-4_7\\n8 -4 1 0 0 0 tile-8_0\\n8 -5 1 0 0 0 tile-8_1\\n4 -1 1 0 0 0 tile-1\\n5 -1 1 0 0 0 tile-1\\n1 -4 2 0 0 0 tile-1\\n1 -5 2 0 0 0 tile-1\\n5 -4 2 0 0 2 tile-36\\n5 -5 2 0 0 2 tile-33\\n5 -6 2 0 0 2 tile-30\\n4 -4 2 0 0 2 tile-38\\n4 -5 2 0 0 2 tile-35\\n4 -6 2 0 0 2 tile-32\\n6 -7 0 0 0 1 tile-68\\n6 -5 0 0 0 1 tile-68\\n7 -3 0 0 0 1 tile-68\\n4 -2 0 0 0 1 tile-68\\n2 -4 0 0 0 1 tile-68\\n3 -5 0 0 0 1 tile-68\\n3 -7 0 0 0 1 tile-68\\n4 -7 0 0 0 1 tile-67\\n6 -6 0 0 0 1 tile-67\\n7 -4 0 0 0 1 tile-63\\n7 -5 0 0 0 1 tile-63\\n2 -5 2 0 0 1 tile-63\\n2 -3 2 0 0 1 tile-63\\n0 -3 0 0 0 1 tile-63\\n0 -5 0 0 0 1 tile-63\\n0 -6 0 0 0 1 tile-63\\n9 -3 2 0 0 1 tile-61\\n9 -4 2 0 0 1 tile-61\\n9 -5 2 0 0 1 tile-61\\n9 -6 2 0 0 1 tile-61\\n9 -7 2 0 0 1 tile-65\\n9 -2 2 0 0 1 tile-64\\n9 -1 2 0 0 1 tile-64\\n2 -9 0 0 0 1 tile-69\\n4 -9 0 0 0 1 tile-69\\n6 -9 0 0 0 1 tile-69\\n8 -9 0 0 0 1 tile-69\\n4 -8 0 0 0 0 tile-13_0\\n5 -8 0 0 0 0 tile-13_1\\n4 -8 0 0 0 3 tile-14\\n\\n===\\n1 6 0 0 0 0 4\\n1 1 1 0 0 0 4\\n6 1 2 0 0 0 4\\n6 6 3 0 0 0 4\\n4 8 0 0 0 0 99\\n8 4 1 0 0 0 8\\n4 1 1 0 0 0 1\\n5 1 1 0 0 0 1\\n1 4 2 0 0 0 1\\n1 5 2 0 0 0 1\\n5 4 2 0 0 2 36\\n5 5 2 0 0 2 33\\n5 6 2 0 0 2 30\\n4 4 2 0 0 2 38\\n4 5 2 0 0 2 35\\n4 6 2 0 0 2 32\\n6 7 0 0 0 1 68\\n6 5 0 0 0 1 68\\n7 3 0 0 0 1 68\\n4 2 0 0 0 1 68\\n2 4 0 0 0 1 68\\n3 5 0 0 0 1 68\\n3 7 0 0 0 1 68\\n4 7 0 0 0 1 67\\n6 6 0 0 0 1 67\\n7 4 0 0 0 1 63\\n7 5 0 0 0 1 63\\n2 5 2 0 0 1 63\\n2 3 2 0 0 1 63\\n0 3 0 0 0 1 63\\n0 5 0 0 0 1 63\\n0 6 0 0 0 1 63\\n9 3 2 0 0 1 61\\n9 4 2 0 0 1 61\\n9 5 2 0 0 1 61\\n9 6 2 0 0 1 61\\n9 7 2 0 0 1 65\\n9 2 2 0 0 1 64\\n9 1 2 0 0 1 64\\n2 9 0 0 0 1 69\\n4 9 0 0 0 1 69\\n6 9 0 0 0 1 69\\n8 9 0 0 0 1 69\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvZGVmYXVsdE1hcC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXAtdmlld2VyLy4vYXNzZXRzL2pzL2RlZmF1bHRNYXAuanM/YTU1NCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBgMSAtNiAwIDAgMCAwIHRpbGUtNF8wXHJcbjIgLTYgMCAwIDAgMCB0aWxlLTRfMVxyXG4xIC03IDAgMCAwIDAgdGlsZS00XzJcclxuMiAtNyAwIDAgMCAwIHRpbGUtNF8zXHJcbjMgLTcgMCAwIDAgMCB0aWxlLTRfNFxyXG4xIC04IDAgMCAwIDAgdGlsZS00XzVcclxuMiAtOCAwIDAgMCAwIHRpbGUtNF82XHJcbjMgLTggMCAwIDAgMCB0aWxlLTRfN1xyXG4zIC0xIDEgMCAwIDAgdGlsZS00XzBcclxuMyAtMiAxIDAgMCAwIHRpbGUtNF8xXHJcbjIgLTEgMSAwIDAgMCB0aWxlLTRfMlxyXG4yIC0yIDEgMCAwIDAgdGlsZS00XzNcclxuMiAtMyAxIDAgMCAwIHRpbGUtNF80XHJcbjEgLTEgMSAwIDAgMCB0aWxlLTRfNVxyXG4xIC0yIDEgMCAwIDAgdGlsZS00XzZcclxuMSAtMyAxIDAgMCAwIHRpbGUtNF83XHJcbjggLTMgMiAwIDAgMCB0aWxlLTRfMFxyXG43IC0zIDIgMCAwIDAgdGlsZS00XzFcclxuOCAtMiAyIDAgMCAwIHRpbGUtNF8yXHJcbjcgLTIgMiAwIDAgMCB0aWxlLTRfM1xyXG42IC0yIDIgMCAwIDAgdGlsZS00XzRcclxuOCAtMSAyIDAgMCAwIHRpbGUtNF81XHJcbjcgLTEgMiAwIDAgMCB0aWxlLTRfNlxyXG42IC0xIDIgMCAwIDAgdGlsZS00XzdcclxuNiAtOCAzIDAgMCAwIHRpbGUtNF8wXHJcbjYgLTcgMyAwIDAgMCB0aWxlLTRfMVxyXG43IC04IDMgMCAwIDAgdGlsZS00XzJcclxuNyAtNyAzIDAgMCAwIHRpbGUtNF8zXHJcbjcgLTYgMyAwIDAgMCB0aWxlLTRfNFxyXG44IC04IDMgMCAwIDAgdGlsZS00XzVcclxuOCAtNyAzIDAgMCAwIHRpbGUtNF82XHJcbjggLTYgMyAwIDAgMCB0aWxlLTRfN1xyXG44IC00IDEgMCAwIDAgdGlsZS04XzBcclxuOCAtNSAxIDAgMCAwIHRpbGUtOF8xXHJcbjQgLTEgMSAwIDAgMCB0aWxlLTFcclxuNSAtMSAxIDAgMCAwIHRpbGUtMVxyXG4xIC00IDIgMCAwIDAgdGlsZS0xXHJcbjEgLTUgMiAwIDAgMCB0aWxlLTFcclxuNSAtNCAyIDAgMCAyIHRpbGUtMzZcclxuNSAtNSAyIDAgMCAyIHRpbGUtMzNcclxuNSAtNiAyIDAgMCAyIHRpbGUtMzBcclxuNCAtNCAyIDAgMCAyIHRpbGUtMzhcclxuNCAtNSAyIDAgMCAyIHRpbGUtMzVcclxuNCAtNiAyIDAgMCAyIHRpbGUtMzJcclxuNiAtNyAwIDAgMCAxIHRpbGUtNjhcclxuNiAtNSAwIDAgMCAxIHRpbGUtNjhcclxuNyAtMyAwIDAgMCAxIHRpbGUtNjhcclxuNCAtMiAwIDAgMCAxIHRpbGUtNjhcclxuMiAtNCAwIDAgMCAxIHRpbGUtNjhcclxuMyAtNSAwIDAgMCAxIHRpbGUtNjhcclxuMyAtNyAwIDAgMCAxIHRpbGUtNjhcclxuNCAtNyAwIDAgMCAxIHRpbGUtNjdcclxuNiAtNiAwIDAgMCAxIHRpbGUtNjdcclxuNyAtNCAwIDAgMCAxIHRpbGUtNjNcclxuNyAtNSAwIDAgMCAxIHRpbGUtNjNcclxuMiAtNSAyIDAgMCAxIHRpbGUtNjNcclxuMiAtMyAyIDAgMCAxIHRpbGUtNjNcclxuMCAtMyAwIDAgMCAxIHRpbGUtNjNcclxuMCAtNSAwIDAgMCAxIHRpbGUtNjNcclxuMCAtNiAwIDAgMCAxIHRpbGUtNjNcclxuOSAtMyAyIDAgMCAxIHRpbGUtNjFcclxuOSAtNCAyIDAgMCAxIHRpbGUtNjFcclxuOSAtNSAyIDAgMCAxIHRpbGUtNjFcclxuOSAtNiAyIDAgMCAxIHRpbGUtNjFcclxuOSAtNyAyIDAgMCAxIHRpbGUtNjVcclxuOSAtMiAyIDAgMCAxIHRpbGUtNjRcclxuOSAtMSAyIDAgMCAxIHRpbGUtNjRcclxuMiAtOSAwIDAgMCAxIHRpbGUtNjlcclxuNCAtOSAwIDAgMCAxIHRpbGUtNjlcclxuNiAtOSAwIDAgMCAxIHRpbGUtNjlcclxuOCAtOSAwIDAgMCAxIHRpbGUtNjlcclxuNCAtOCAwIDAgMCAwIHRpbGUtMTNfMFxyXG41IC04IDAgMCAwIDAgdGlsZS0xM18xXHJcbjQgLTggMCAwIDAgMyB0aWxlLTE0XHJcblxyXG49PT1cclxuMSA2IDAgMCAwIDAgNFxyXG4xIDEgMSAwIDAgMCA0XHJcbjYgMSAyIDAgMCAwIDRcclxuNiA2IDMgMCAwIDAgNFxyXG40IDggMCAwIDAgMCA5OVxyXG44IDQgMSAwIDAgMCA4XHJcbjQgMSAxIDAgMCAwIDFcclxuNSAxIDEgMCAwIDAgMVxyXG4xIDQgMiAwIDAgMCAxXHJcbjEgNSAyIDAgMCAwIDFcclxuNSA0IDIgMCAwIDIgMzZcclxuNSA1IDIgMCAwIDIgMzNcclxuNSA2IDIgMCAwIDIgMzBcclxuNCA0IDIgMCAwIDIgMzhcclxuNCA1IDIgMCAwIDIgMzVcclxuNCA2IDIgMCAwIDIgMzJcclxuNiA3IDAgMCAwIDEgNjhcclxuNiA1IDAgMCAwIDEgNjhcclxuNyAzIDAgMCAwIDEgNjhcclxuNCAyIDAgMCAwIDEgNjhcclxuMiA0IDAgMCAwIDEgNjhcclxuMyA1IDAgMCAwIDEgNjhcclxuMyA3IDAgMCAwIDEgNjhcclxuNCA3IDAgMCAwIDEgNjdcclxuNiA2IDAgMCAwIDEgNjdcclxuNyA0IDAgMCAwIDEgNjNcclxuNyA1IDAgMCAwIDEgNjNcclxuMiA1IDIgMCAwIDEgNjNcclxuMiAzIDIgMCAwIDEgNjNcclxuMCAzIDAgMCAwIDEgNjNcclxuMCA1IDAgMCAwIDEgNjNcclxuMCA2IDAgMCAwIDEgNjNcclxuOSAzIDIgMCAwIDEgNjFcclxuOSA0IDIgMCAwIDEgNjFcclxuOSA1IDIgMCAwIDEgNjFcclxuOSA2IDIgMCAwIDEgNjFcclxuOSA3IDIgMCAwIDEgNjVcclxuOSAyIDIgMCAwIDEgNjRcclxuOSAxIDIgMCAwIDEgNjRcclxuMiA5IDAgMCAwIDEgNjlcclxuNCA5IDAgMCAwIDEgNjlcclxuNiA5IDAgMCAwIDEgNjlcclxuOCA5IDAgMCAwIDEgNjlcclxuYDtcclxuICAgICAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./assets/js/defaultMap.js\n");

/***/ }),

/***/ "./assets/js/editor.js":
/*!*****************************!*\
  !*** ./assets/js/editor.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Editor)\n/* harmony export */ });\n/* harmony import */ var _tiles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tiles.js */ \"./assets/js/tiles.js\");\n/* harmony import */ var _defaultMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultMap.js */ \"./assets/js/defaultMap.js\");\n/* harmony import */ var _toUnity_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./toUnity.js */ \"./assets/js/toUnity.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\n\nvar Editor = /*#__PURE__*/function () {\n  function Editor() {\n    var _this = this;\n\n    _classCallCheck(this, Editor);\n\n    this.loadButton = document.querySelector(\"#load\");\n    this.widthInput = document.querySelector(\"#amountX\");\n    this.heightInput = document.querySelector(\"#amountY\");\n    this.tilemap = document.querySelector(\".tilemap\");\n    this.rotateButton = document.querySelector(\"#rotate\");\n    this.zoomInButton = document.querySelector(\"#zoom-in\");\n    this.zoomOutButton = document.querySelector(\"#zoom-out\");\n    this.eraseButton = document.querySelector(\"#eraser\");\n    this.dropButton = document.querySelector(\"#drop-tool\");\n    this.flipXButton = document.querySelector(\"#flip-x\");\n    this.flipYButton = document.querySelector(\"#flip-y\");\n    this.tilesRoot = document.querySelector(\".tiles\");\n    this.tileset = document.querySelector(\".tileset\");\n    this.importButton = document.querySelector(\"#import\");\n    this.copyButton = document.querySelector(\"#copy\");\n    this.level = document.querySelector(\"#level\");\n    this.heroPathButton = document.querySelector(\"#create-hero-path-button\");\n    this.tilesObjects = _tiles_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n    this.defaultMap = _defaultMap_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    this.tileElements = [];\n    this.rotation = 0;\n    this.flipX = false;\n    this.flipY = false;\n    this.placeActive = false;\n    this.activeTile = null;\n    this.eraseMode = false;\n    this.ghost = null;\n    this.width = 0;\n    this.height = 0;\n    this.zoom = 3;\n    this.imageFolder = \"../img/tiles/export/\"; // import default\n\n    this[\"import\"](this.defaultMap); // handle import\n\n    this.loadButton.addEventListener(\"click\", function (e) {\n      var width = _this.widthInput.value;\n      var height = _this.heightInput.value;\n\n      var _map = [width, height].map(function (e) {\n        return parseInt(e);\n      });\n\n      var _map2 = _slicedToArray(_map, 2);\n\n      width = _map2[0];\n      height = _map2[1];\n\n      _this.clearTiles();\n\n      _this.createBoard(width, height);\n\n      _this[\"export\"]();\n    }); // handle map create\n\n    this.importButton.addEventListener(\"click\", function (e) {\n      _this[\"import\"](_this.level.value);\n    }); // \n\n    this.populateTiles(this.tilesObjects); // rotate\n\n    this.rotateButton.addEventListener(\"click\", function (e) {\n      _this.rotate();\n    });\n    document.addEventListener(\"keydown\", function (e) {\n      console.log(e);\n      if (e.code === \"KeyR\" && e.shiftKey) _this.rotate(true);\n      if (e.code === \"KeyR\" && !e.shiftKey) _this.rotate(); // if (e.code === \"KeyE\") this.toggleErase();\n\n      if (e.key === \"x\") _this.doFlipX();\n      if (e.key === \"y\") _this.doFlipY();\n\n      if (e.ctrlKey) {\n        _this.eraseMode = true;\n\n        _this.updateErase();\n      }\n\n      if (e.altKey) {\n        e.preventDefault();\n        _this.dropMode = true;\n\n        _this.updateDrop();\n      }\n    });\n    document.addEventListener(\"keyup\", function (e) {\n      if (!e.ctrlKey) {\n        _this.eraseMode = false;\n\n        _this.updateErase();\n      }\n\n      if (!e.altKey) {\n        _this.dropMode = false;\n\n        _this.updateDrop();\n      }\n    }); // flip\n\n    this.flipXButton.addEventListener(\"click\", function (e) {\n      _this.doFlipX();\n    });\n    this.flipYButton.addEventListener(\"click\", function (e) {\n      _this.doFlipY();\n    }); // erase\n\n    this.eraseButton.addEventListener(\"click\", function (e) {\n      _this.toggleErase();\n    }); // eyedrop\n\n    this.dropButton.addEventListener(\"click\", function (e) {\n      _this.toggleDropTool();\n    }); // drag\n\n    document.body.addEventListener(\"mousedown\", function (e) {\n      _this.drag = true;\n    });\n    document.body.addEventListener(\"mouseup\", function (e) {\n      _this.drag = false;\n    }); // disable drag \n\n    function noDrag(event) {\n      event.preventDefault();\n    }\n\n    document.addEventListener('dragstart', noDrag, true);\n    this.updateTransform(); // handle zoom\n\n    this.zoomInButton.addEventListener(\"click\", function (e) {\n      return _this.zoomIn();\n    });\n    this.zoomOutButton.addEventListener(\"click\", function (e) {\n      return _this.zoomOut();\n    });\n    console.log(this.zoom);\n    console.log('zoom bitch'); //  update zoom\n\n    this.updateZoom(); // copy\n\n    var copyTimeout = false;\n    this.copyButton.addEventListener(\"click\", function (e) {\n      clearTimeout(copyTimeout);\n\n      _this.copyToClipboard(_this.level.value);\n\n      _this.copyButton.innerText = \"Copied\";\n      copyTimeout = setTimeout(function (e) {\n        _this.copyButton.innerText = \"Copy map\";\n      }, 1000);\n    });\n  }\n\n  _createClass(Editor, [{\n    key: \"copyToClipboard\",\n    value: function copyToClipboard(value) {\n      var el = document.createElement(\"textarea\");\n      el.value = valueEncoded;\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(el);\n    }\n  }, {\n    key: \"zoomIn\",\n    value: function zoomIn() {\n      console.log(this.zoom);\n      this.zoom += 1;\n      if (this.zoom > 10) this.zoom = 10;\n      this.updateZoom();\n    }\n  }, {\n    key: \"zoomOut\",\n    value: function zoomOut() {\n      this.zoom -= 1;\n      if (this.zoom < 1) this.zoom = 1;\n      this.updateZoom();\n    }\n  }, {\n    key: \"updateZoom\",\n    value: function updateZoom() {\n      document.body.style.setProperty(\"--zoom\", this.zoom);\n    }\n  }, {\n    key: \"toggleDropTool\",\n    value: function toggleDropTool() {\n      this.dropMode = !this.dropMode;\n      this.updateDrop();\n    }\n  }, {\n    key: \"updateDrop\",\n    value: function updateDrop() {\n      this.dropMode ? document.body.classList.add(\"drop-mode\") : document.body.classList.remove(\"drop-mode\");\n    }\n  }, {\n    key: \"toggleErase\",\n    value: function toggleErase() {\n      this.eraseMode = !this.eraseMode;\n      this.updateErase();\n    }\n  }, {\n    key: \"updateErase\",\n    value: function updateErase() {\n      this.eraseMode ? document.body.classList.add(\"erase-mode\") : document.body.classList.remove(\"erase-mode\");\n    }\n  }, {\n    key: \"toEdser\",\n    value: function toEdser() {// console.log(JSON.stringify(this.tiles))\n    }\n  }, {\n    key: \"doFlipX\",\n    value: function doFlipX() {\n      this.flipX = !this.flipX;\n      this.updateTransform();\n    }\n  }, {\n    key: \"doFlipY\",\n    value: function doFlipY() {\n      this.flipY = !this.flipY;\n      this.updateTransform();\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate() {\n      var reverse = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      console.log(reverse);\n      this.rotation += reverse ? -1 : 1;\n      this.rotation = this.rotation % 4;\n      this.updateTransform();\n    }\n  }, {\n    key: \"updateTransform\",\n    value: function updateTransform() {\n      document.body.style.setProperty(\"--tiles-rotation\", this.rotation);\n      document.body.style.setProperty(\"--tiles-flip-x\", this.flipX ? -1 : 1);\n      document.body.style.setProperty(\"--tiles-flip-y\", this.flipY ? -1 : 1);\n      this.placeGhost(this.ghostX, this.ghostY, this.activeTile);\n    }\n  }, {\n    key: \"populateTiles\",\n    value: function populateTiles(tiles) {\n      var _this2 = this;\n\n      this.tilesetTiles = [];\n\n      var _loop = function _loop() {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i2], 2),\n            id = _Object$entries$_i[0],\n            tile = _Object$entries$_i[1];\n\n        if (\"disabled\" in tile && tile.disabled) return \"continue\";\n        var element = document.createElement(\"div\");\n        element.classList.add(\"tileset-item\");\n        element.style.setProperty(\"--tile\", \"url('\".concat(_this2.imageFolder).concat(tile.image, \"')\"));\n\n        _this2.tilesetTiles.push(element);\n\n        element.addEventListener(\"click\", function (e) {\n          _this2.setActiveTile(element, parseInt(id));\n        });\n\n        _this2.tileset.append(element);\n      };\n\n      for (var _i2 = 0, _Object$entries = Object.entries(tiles); _i2 < _Object$entries.length; _i2++) {\n        var _ret = _loop();\n\n        if (_ret === \"continue\") continue;\n      }\n    }\n  }, {\n    key: \"setActiveTile\",\n    value: function setActiveTile(element, tileId) {\n      this.placeActive = true;\n      this.eraseMode = false;\n      this.updateErase();\n\n      if (element) {\n        if (element.classList.contains(\"is-active\")) this.placeActive = false;\n        this.tilesetTiles.forEach(function (e) {\n          return e.classList.remove(\"is-active\");\n        });\n\n        if (this.placeActive) {\n          element.classList.add(\"is-active\");\n          document.body.classList.add(\"tile-active\");\n        } else {\n          element.classList.remove(\"is-active\");\n          document.body.classList.remove(\"tile-active\");\n        }\n      }\n\n      this.activeTile = tileId;\n    }\n  }, {\n    key: \"export\",\n    value: function _export() {\n      // filter finish\n      var values = JSON.parse(JSON.stringify(this.tiles)); // deep copy\n\n      var toSplice = [];\n\n      for (var _i3 = 0, _Object$entries2 = Object.entries(values); _i3 < _Object$entries2.length; _i3++) {\n        var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i3], 2),\n            tileId = _Object$entries2$_i[0],\n            tile = _Object$entries2$_i[1];\n\n        var x = tile.x,\n            y = tile.y,\n            rotation = tile.rotation,\n            flipX = tile.flipX,\n            flipY = tile.flipY,\n            layer = tile.layer,\n            id = tile.id;\n\n        if (id == 99) {\n          console.log(values[tileId]);\n          toSplice.push(tileId);\n        }\n      }\n\n      console.log(toSplice);\n\n      var _iterator = _createForOfIteratorHelper(toSplice.reverse()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _tileId = _step.value;\n          values.splice(_tileId, 1);\n          var _tile = this.tiles[_tileId];\n          var _x = _tile.x,\n              _y = _tile.y,\n              _rotation = _tile.rotation,\n              _flipX = _tile.flipX,\n              _flipY = _tile.flipY,\n              _layer = _tile.layer,\n              _id = _tile.id;\n          values.push({\n            x: _x,\n            y: _y,\n            rotation: _rotation,\n            flipX: _flipX,\n            flipY: _flipY,\n            layer: 0,\n            id: 13\n          });\n          values.push({\n            x: _x,\n            y: _y,\n            rotation: _rotation,\n            flipX: _flipX,\n            flipY: _flipY,\n            layer: 3,\n            id: 14\n          });\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var value = \"\".concat(this.toUnity(values), \"\\n===\\n\").concat(this.toEditor(this.tiles));\n      this.level.value = value;\n      this.toEdser();\n    }\n  }, {\n    key: \"toEditor\",\n    value: function toEditor(value) {\n      var output = '';\n\n      var _iterator2 = _createForOfIteratorHelper(value),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var tile = _step2.value;\n          var x = tile.x,\n              y = tile.y,\n              rotation = tile.rotation,\n              flipX = tile.flipX,\n              flipY = tile.flipY,\n              layer = tile.layer,\n              id = tile.id;\n          output += \"\".concat(x, \" \").concat(y, \" \").concat(rotation, \" \").concat(flipX ? 1 : 0, \" \").concat(flipY ? 1 : 0, \" \").concat(layer, \" \").concat(id, \"\\n\");\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      console.log(value);\n      return output;\n    }\n  }, {\n    key: \"toUnity\",\n    value: function toUnity(value) {\n      return (0,_toUnity_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(value, this.tilesObjects);\n    }\n  }, {\n    key: \"parseImport\",\n    value: function parseImport(value) {\n      var all = [];\n      var width = 0;\n      var height = 0;\n      var levelSplit = value.split(\"===\");\n      if (!levelSplit.length > 1) return;\n      var level = levelSplit[1];\n      var rows = value.split(\"\\n\");\n\n      var _iterator3 = _createForOfIteratorHelper(rows),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var row = _step3.value;\n          var column = row.split(\" \");\n          if (column.length !== 7) continue;\n          var parsed = row.split(\" \").map(function (e) {\n            return parseInt(e);\n          });\n          if (!parsed.every(function (e) {\n            return !isNaN(e);\n          })) continue;\n\n          var _parsed = _slicedToArray(parsed, 7),\n              x = _parsed[0],\n              y = _parsed[1],\n              rotation = _parsed[2],\n              flipX = _parsed[3],\n              flipY = _parsed[4],\n              layer = _parsed[5],\n              id = _parsed[6];\n\n          var tile = this.tilesObjects[id];\n          if (x + tile.width - 1 > width) width = x + tile.width - 1;\n          if (y + tile.height - 1 > height) height = y + tile.height - 1;\n          flipX = flipX === 1;\n          flipY = flipY === 1;\n          all.push({\n            x: x,\n            y: y,\n            rotation: rotation,\n            flipX: flipX,\n            flipY: flipY,\n            layer: layer,\n            id: id\n          });\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return [all, width + 1, height + 1];\n    }\n  }, {\n    key: \"import\",\n    value: function _import(value) {\n      this.level.value = value;\n      this.clearTiles();\n\n      var _this$parseImport = this.parseImport(value);\n\n      var _this$parseImport2 = _slicedToArray(_this$parseImport, 3);\n\n      this.tiles = _this$parseImport2[0];\n      this.width = _this$parseImport2[1];\n      this.height = _this$parseImport2[2];\n      this.createBoard(this.width, this.height);\n      this.loadBoard(this.tiles);\n    }\n  }, {\n    key: \"clearTiles\",\n    value: function clearTiles() {\n      this.tiles = [];\n      this.tilesRoot.innerHTML = \"\"; // this.loadBoard([]);\n    }\n  }, {\n    key: \"createBoard\",\n    value: function createBoard(width, height) {\n      var _this3 = this;\n\n      // this.clearTiles();\n      this.widthInput.value = width;\n      this.heightInput.value = height;\n      var _ref = [width, height];\n      this.width = _ref[0];\n      this.height = _ref[1];\n      // document.body.style.setProperty(\"--size\", `calc(${100 / height}vmin - 2px - (2rem / ${height}))`);\n      document.body.style.setProperty(\"--map-width\", width);\n      document.body.style.setProperty(\"--map-height\", height);\n      this.tilemap.innerHTML = \"\";\n      this.tilemap.append(this.tilesRoot);\n      this.rows = [];\n\n      var _loop2 = function _loop2(y) {\n        var elementColumn = [];\n        var row = document.createElement(\"div\");\n        row.classList.add(\"tile-row\");\n\n        _this3.tilemap.appendChild(row);\n\n        var _loop3 = function _loop3(x) {\n          var col = document.createElement(\"div\");\n          col.classList.add(\"tile-col\");\n          row.appendChild(col);\n          elementColumn.push(col); // events\n\n          col.addEventListener(\"mouseenter\", function (e) {\n            if (!_this3.placeActive) return;\n\n            if (_this3.drag) {\n              _this3.tryPlace(x, y, _this3.activeTile);\n\n              return;\n            }\n\n            _this3.placeGhost(x, y, _this3.activeTile);\n          });\n          col.addEventListener(\"mousedown\", function (e) {\n            if (!_this3.placeActive) return;\n\n            _this3.tryPlace(x, y, _this3.activeTile);\n          });\n        };\n\n        for (var x = 0; x < width; x++) {\n          _loop3(x);\n        }\n\n        _this3.rows.push(elementColumn); // board.push(boardRow);\n\n      };\n\n      for (var y = 0; y < height; y++) {\n        _loop2(y);\n      }\n    }\n  }, {\n    key: \"placeGhost\",\n    value: function placeGhost(x, y, tileId) {\n      var _ref2 = [x, y];\n      this.ghostX = _ref2[0];\n      this.ghostY = _ref2[1];\n      if (this.ghost) this.ghost.remove();\n      var success = this.tryPlace(x, y, tileId, true);\n      if (success) this.ghost = success;\n    }\n  }, {\n    key: \"registerTile\",\n    value: function registerTile(x, y, rotation, flipX, flipY, layer, id) {\n      this.tiles.push({\n        x: x,\n        y: y,\n        rotation: rotation,\n        flipX: flipX,\n        flipY: flipY,\n        layer: layer,\n        id: id\n      });\n    }\n  }, {\n    key: \"tryPlace\",\n    value: function tryPlace(x, y, tileId) {\n      var ghost = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (tileId) {\n        var tile = this.tilesObjects[tileId];\n        console.log(this.tilesObjects, tileId, tile);\n\n        var _this$rotatedDim = this.rotatedDim(tile.width, tile.height, this.rotation),\n            _this$rotatedDim2 = _slicedToArray(_this$rotatedDim, 2),\n            width = _this$rotatedDim2[0],\n            height = _this$rotatedDim2[1];\n\n        if (x + width > this.width) return false;\n        if (y + height > this.height) return false;\n        var layer = \"layer\" in tile ? tile.layer : 0;\n        var overlapping = this.getOverlappingTiles(x, y, width, height, layer);\n        if (overlapping.length > 0) return false;\n        if (!ghost) this.registerTile(x, y, this.rotation, this.flipX, this.flipY, layer, tileId);\n        return this.addTile(x, y, this.rotation, this.flipX, this.flipY, layer, tileId, ghost);\n      }\n    }\n  }, {\n    key: \"getOverlappingTiles\",\n    value: function getOverlappingTiles(x, y, w, h, layer) {\n      var overlapping = [];\n      var right = x + w;\n      var bottom = y + h;\n\n      var _iterator4 = _createForOfIteratorHelper(this.tiles),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var tile = _step4.value;\n          var tileSettings = this.tilesObjects[tile.id];\n\n          var _this$rotatedDim3 = this.rotatedDim(tileSettings.width, tileSettings.height, tile.rotation),\n              _this$rotatedDim4 = _slicedToArray(_this$rotatedDim3, 2),\n              tileWidth = _this$rotatedDim4[0],\n              tileHeight = _this$rotatedDim4[1];\n\n          var a = {\n            top: y,\n            left: x,\n            width: w,\n            height: h\n          };\n          var b = {\n            top: tile.y,\n            left: tile.x,\n            width: tileWidth,\n            height: tileHeight\n          };\n          var tileLayer = \"layer\" in tile ? tile.layer : 0; // @from: https://stackoverflow.com/questions/57513036/bounding-box-of-multiple-overlapping-rectangles\n\n          if (!(a.top + a.height - 1 < b.top || a.top > b.top + b.height - 1 || a.left + a.width - 1 < b.left || a.left > b.left + b.width - 1) && tileLayer === layer) overlapping.push(tile);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return overlapping; // return [];\n    }\n  }, {\n    key: \"rotatedDim\",\n    value: function rotatedDim(width, height, rotation) {\n      if (rotation % 2 === 1) {\n        var _ref3 = [height, width];\n        width = _ref3[0];\n        height = _ref3[1];\n      }\n\n      return [width, height];\n    }\n  }, {\n    key: \"removeTile\",\n    value: function removeTile(x, y, id) {\n      console.log(this.tilesetTiles);\n\n      for (var _i4 = 0, _Object$entries3 = Object.entries(this.tiles); _i4 < _Object$entries3.length; _i4++) {\n        var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i4], 2),\n            tileId = _Object$entries3$_i[0],\n            tile = _Object$entries3$_i[1];\n\n        // let tile = this.tiles[tileId];\n        // console.log(tileId, this.tiles, tile);\n        if (tile.x === x && tile.y === y) {\n          console.log(tile);\n          this.tiles.splice(tileId, 1);\n        }\n      }\n\n      var _iterator5 = _createForOfIteratorHelper(this.tileElements),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var element = _step5.value;\n          console.log(element, id);\n\n          if (\"id\" in element.dataset && element.dataset.id == id) {\n            element.remove();\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      this[\"export\"]();\n    }\n  }, {\n    key: \"getId\",\n    value: function getId() {\n      return Math.floor(Math.random() * 10000000);\n    }\n  }, {\n    key: \"getTile\",\n    value: function getTile(x, y) {\n      return this.rows[y][x];\n    }\n  }, {\n    key: \"addTile\",\n    value: function addTile(x, y, rotation, flipX, flipY, layer, id) {\n      var _this4 = this;\n\n      var isGhost = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;\n      if (!(id in this.tilesObjects)) return;\n      var tile = this.tilesObjects[id];\n      var tileElement = document.createElement(\"div\");\n      var width = tile.width,\n          height = tile.height; // if (rotation % 2 === 1) [width, height] = [height, width];\n\n      tileElement.classList.add(\"tile\");\n      tileElement.style.setProperty(\"--rotation\", rotation);\n      tileElement.style.setProperty(\"--tile\", \"url('\".concat(this.imageFolder).concat(tile.image, \"')\"));\n      tileElement.style.setProperty(\"--width\", width);\n      tileElement.style.setProperty(\"--height\", height);\n      tileElement.style.setProperty(\"--flip-x\", flipX ? -1 : 1);\n      tileElement.style.setProperty(\"--flip-y\", flipY ? -1 : 1);\n      tileElement.style.setProperty(\"--x\", x);\n      tileElement.style.setProperty(\"--y\", y);\n      var tileId = this.getId();\n      tileElement.dataset.id = tileId;\n      this.tileElements.push(tileElement);\n      tileElement.addEventListener(\"click\", function (e) {\n        if (_this4.eraseMode) _this4.removeTile(x, y, tileId);\n        if (_this4.dropMode) _this4.setActiveTile(false, id);\n      });\n      var offset = Math.abs((width - height) / 2);\n\n      if (width < height) {\n        if (rotation % 2 === 1) {\n          tileElement.style.setProperty(\"--offset-x\", -offset);\n          tileElement.style.setProperty(\"--offset-y\", offset);\n        } else {}\n      } else {\n        if (rotation % 2 === 1) {\n          tileElement.style.setProperty(\"--offset-x\", offset);\n          tileElement.style.setProperty(\"--offset-y\", -offset);\n        } else {\n          console.log(\"edge case\");\n        }\n      }\n\n      if (isGhost) tileElement.classList.add(\"is-ghost\");\n      this.tilesRoot.append(tileElement);\n      if (!isGhost) this[\"export\"]();\n      return tileElement;\n    }\n  }, {\n    key: \"loadBoard\",\n    value: function loadBoard(tiles) {\n      var _iterator6 = _createForOfIteratorHelper(tiles),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var tileInfo = _step6.value;\n          var x = tileInfo.x,\n              y = tileInfo.y,\n              rotation = tileInfo.rotation,\n              flipX = tileInfo.flipX,\n              flipY = tileInfo.flipY,\n              layer = tileInfo.layer,\n              id = tileInfo.id;\n          this.addTile(x, y, rotation, flipX, flipY, layer, id);\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }]);\n\n  return Editor;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/editor.js\n");

/***/ }),

/***/ "./assets/js/tiles.js":
/*!****************************!*\
  !*** ./assets/js/tiles.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  1: {\n    image: \"tile-1.png\",\n    name: \"tile-1\",\n    width: 1,\n    height: 1,\n    ids: [1]\n  },\n  2: {\n    image: \"tile-2.png\",\n    name: \"tile-2\",\n    width: 1,\n    height: 1,\n    ids: [2]\n  },\n  3: {\n    image: \"tile-3.png\",\n    name: \"tile-3\",\n    width: 2,\n    height: 2,\n    ids: [3, 4, 5, 6]\n  },\n  4: {\n    image: \"tile-4.png\",\n    name: \"tile-4\",\n    width: 3,\n    height: 3,\n    ids: [7, 8, null, 9, 10, 11, 12, 13, 14]\n  },\n  5: {\n    image: \"tile-5.png\",\n    name: \"tile-5\",\n    width: 2,\n    height: 2,\n    ids: [15, 16, 17, 18]\n  },\n  6: {\n    image: \"tile-6.png\",\n    name: \"tile-6\",\n    width: 3,\n    height: 2,\n    ids: [19, 20, 21, 22, 23, 24]\n  },\n  7: {\n    image: \"tile-7.png\",\n    name: \"tile-7\",\n    width: 4,\n    height: 3,\n    ids: [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]\n  },\n  8: {\n    image: \"tile-8.png\",\n    name: \"tile-8\",\n    width: 2,\n    height: 1,\n    ids: [1, 2]\n  },\n  9: {\n    image: \"tile-9.png\",\n    name: \"tile-9\",\n    width: 2,\n    height: 3,\n    ids: [1, 2, 3, 4, 5, 6]\n  },\n  10: {\n    image: \"tile-10.png\",\n    name: \"tile-10\",\n    width: 2,\n    height: 3,\n    layer: 0,\n    ids: [1, 2, 3, 4]\n  },\n  11: {\n    image: \"tile-11.png\",\n    name: \"tile-11\",\n    width: 2,\n    height: 2,\n    layer: 0,\n    ids: [1, 2, 3, 4]\n  },\n  12: {\n    image: \"tile-12.png\",\n    name: \"tile-12\",\n    width: 2,\n    height: 2,\n    layer: 0,\n    ids: [1, 2, 3, 4]\n  },\n  13: {\n    image: \"tile-13.png\",\n    name: \"tile-13\",\n    width: 2,\n    height: 1,\n    layer: 3,\n    ids: [1, 2],\n    disabled: true\n  },\n  14: {\n    image: \"tile-14.png\",\n    name: \"tile-14\",\n    width: 2,\n    height: 1,\n    layer: 3,\n    ids: [1, null],\n    disabled: true\n  },\n  15: {\n    image: \"tile-15.png\",\n    name: \"tile-15\",\n    width: 2,\n    height: 2,\n    layer: 0,\n    ids: [1, 2, 3, 4]\n  },\n  99: {\n    image: \"tile-finish.png\",\n    name: \"tile-finish\",\n    width: 2,\n    height: 1,\n    layer: 0,\n    ids: [1, 2]\n  },\n  30: {\n    image: \"tile-30.png\",\n    name: \"tile-30\",\n    width: 1,\n    height: 1,\n    layer: 2,\n    ids: [1]\n  },\n  31: {\n    image: \"tile-31.png\",\n    name: \"tile-31\",\n    width: 1,\n    height: 1,\n    layer: 2,\n    ids: [1]\n  },\n  32: {\n    image: \"tile-32.png\",\n    name: \"tile-32\",\n    width: 1,\n    height: 1,\n    layer: 2,\n    ids: [1]\n  },\n  33: {\n    image: \"tile-33.png\",\n    name: \"tile-33\",\n    width: 1,\n    height: 1,\n    layer: 2,\n    ids: [1]\n  },\n  34: {\n    image: \"tile-34.png\",\n    name: \"tile-34\",\n    width: 1,\n    height: 1,\n    layer: 2,\n    ids: [1]\n  },\n  35: {\n    image: \"tile-35.png\",\n    name: \"tile-35\",\n    width: 1,\n    height: 1,\n    layer: 2,\n    ids: [1]\n  },\n  36: {\n    image: \"tile-36.png\",\n    name: \"tile-36\",\n    width: 1,\n    height: 1,\n    layer: 2,\n    ids: [1]\n  },\n  37: {\n    image: \"tile-37.png\",\n    name: \"tile-37\",\n    width: 1,\n    height: 1,\n    layer: 2,\n    ids: [1]\n  },\n  38: {\n    image: \"tile-38.png\",\n    name: \"tile-38\",\n    width: 1,\n    height: 1,\n    layer: 2,\n    ids: [1]\n  },\n  39: {\n    image: \"tile-39.png\",\n    name: \"tile-39\",\n    width: 1,\n    height: 1,\n    layer: 2,\n    ids: [1]\n  },\n  40: {\n    image: \"tile-40.png\",\n    name: \"tile-40\",\n    width: 1,\n    height: 1,\n    layer: 2,\n    ids: [1]\n  },\n  41: {\n    image: \"tile-41.png\",\n    name: \"tile-41\",\n    width: 1,\n    height: 1,\n    layer: 2,\n    ids: [1]\n  },\n  42: {\n    image: \"tile-42.png\",\n    name: \"tile-42\",\n    width: 1,\n    height: 1,\n    layer: 2,\n    ids: [1]\n  },\n  60: {\n    image: \"tile-60.png\",\n    name: \"tile-60\",\n    width: 1,\n    height: 1,\n    layer: 1,\n    ids: [1]\n  },\n  61: {\n    image: \"tile-61.png\",\n    name: \"tile-61\",\n    width: 1,\n    height: 1,\n    layer: 1,\n    ids: [1]\n  },\n  62: {\n    image: \"tile-62.png\",\n    name: \"tile-62\",\n    width: 1,\n    height: 1,\n    layer: 1,\n    ids: [1]\n  },\n  63: {\n    image: \"tile-63.png\",\n    name: \"tile-63\",\n    width: 1,\n    height: 1,\n    layer: 1,\n    ids: [1]\n  },\n  64: {\n    image: \"tile-64.png\",\n    name: \"tile-64\",\n    width: 1,\n    height: 1,\n    layer: 1,\n    ids: [1]\n  },\n  65: {\n    image: \"tile-65.png\",\n    name: \"tile-65\",\n    width: 1,\n    height: 1,\n    layer: 1,\n    ids: [1]\n  },\n  66: {\n    image: \"tile-66.png\",\n    name: \"tile-66\",\n    width: 1,\n    height: 1,\n    layer: 1,\n    ids: [1]\n  },\n  67: {\n    image: \"tile-67.png\",\n    name: \"tile-67\",\n    width: 1,\n    height: 1,\n    layer: 1,\n    ids: [1]\n  },\n  68: {\n    image: \"tile-68.png\",\n    name: \"tile-68\",\n    width: 1,\n    height: 1,\n    layer: 1,\n    ids: [1]\n  },\n  69: {\n    image: \"tile-69.png\",\n    name: \"tile-69\",\n    width: 1,\n    height: 1,\n    layer: 1,\n    ids: [1]\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5ILEdBMUhTO0FBa0liLE1BQUk7QUFDRkosSUFBQUEsS0FBSyxFQUFFLGFBREw7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFNBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFLENBSEw7QUFJRkMsSUFBQUEsTUFBTSxFQUFFLENBSk47QUFLRkUsSUFBQUEsS0FBSyxFQUFFLENBTEw7QUFNRkQsSUFBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5ILEdBbElTO0FBMEliLE1BQUk7QUFDRkosSUFBQUEsS0FBSyxFQUFFLGFBREw7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFNBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFLENBSEw7QUFJRkMsSUFBQUEsTUFBTSxFQUFFLENBSk47QUFLRkUsSUFBQUEsS0FBSyxFQUFFLENBTEw7QUFNRkQsSUFBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5ILEdBMUlTO0FBa0piLE1BQUk7QUFDRkosSUFBQUEsS0FBSyxFQUFFLGFBREw7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFNBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFLENBSEw7QUFJRkMsSUFBQUEsTUFBTSxFQUFFLENBSk47QUFLRkUsSUFBQUEsS0FBSyxFQUFFLENBTEw7QUFNRkQsSUFBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5ILEdBbEpTO0FBMEpiLE1BQUk7QUFDRkosSUFBQUEsS0FBSyxFQUFFLGFBREw7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFNBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFLENBSEw7QUFJRkMsSUFBQUEsTUFBTSxFQUFFLENBSk47QUFLRkUsSUFBQUEsS0FBSyxFQUFFLENBTEw7QUFNRkQsSUFBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5ILEdBMUpTO0FBa0tiLE1BQUk7QUFDRkosSUFBQUEsS0FBSyxFQUFFLGFBREw7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFNBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFLENBSEw7QUFJRkMsSUFBQUEsTUFBTSxFQUFFLENBSk47QUFLRkUsSUFBQUEsS0FBSyxFQUFFLENBTEw7QUFNRkQsSUFBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5ILEdBbEtTO0FBMEtiLE1BQUk7QUFDRkosSUFBQUEsS0FBSyxFQUFFLGFBREw7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFNBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFLENBSEw7QUFJRkMsSUFBQUEsTUFBTSxFQUFFLENBSk47QUFLRkUsSUFBQUEsS0FBSyxFQUFFLENBTEw7QUFNRkQsSUFBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5ILEdBMUtTO0FBa0xiLE1BQUk7QUFDRkosSUFBQUEsS0FBSyxFQUFFLGFBREw7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFNBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFLENBSEw7QUFJRkMsSUFBQUEsTUFBTSxFQUFFLENBSk47QUFLRkUsSUFBQUEsS0FBSyxFQUFFLENBTEw7QUFNRkQsSUFBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5ILEdBbExTO0FBMExiLE1BQUk7QUFDRkosSUFBQUEsS0FBSyxFQUFFLGFBREw7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFNBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFLENBSEw7QUFJRkMsSUFBQUEsTUFBTSxFQUFFLENBSk47QUFLRkUsSUFBQUEsS0FBSyxFQUFFLENBTEw7QUFNRkQsSUFBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5ILEdBMUxTO0FBa01iLE1BQUk7QUFDRkosSUFBQUEsS0FBSyxFQUFFLGFBREw7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFNBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFLENBSEw7QUFJRkMsSUFBQUEsTUFBTSxFQUFFLENBSk47QUFLRkUsSUFBQUEsS0FBSyxFQUFFLENBTEw7QUFNRkQsSUFBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5ILEdBbE1TO0FBME1iLE1BQUk7QUFDRkosSUFBQUEsS0FBSyxFQUFFLGFBREw7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFNBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFLENBSEw7QUFJRkMsSUFBQUEsTUFBTSxFQUFFLENBSk47QUFLRkUsSUFBQUEsS0FBSyxFQUFFLENBTEw7QUFNRkQsSUFBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5ILEdBMU1TO0FBa05iLE1BQUk7QUFDRkosSUFBQUEsS0FBSyxFQUFFLGFBREw7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFNBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFLENBSEw7QUFJRkMsSUFBQUEsTUFBTSxFQUFFLENBSk47QUFLRkUsSUFBQUEsS0FBSyxFQUFFLENBTEw7QUFNRkQsSUFBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5ILEdBbE5TO0FBME5iLE1BQUk7QUFDRkosSUFBQUEsS0FBSyxFQUFFLGFBREw7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFNBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFLENBSEw7QUFJRkMsSUFBQUEsTUFBTSxFQUFFLENBSk47QUFLRkUsSUFBQUEsS0FBSyxFQUFFLENBTEw7QUFNRkQsSUFBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5ILEdBMU5TO0FBa09iLE1BQUk7QUFDRkosSUFBQUEsS0FBSyxFQUFFLGFBREw7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFNBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFLENBSEw7QUFJRkMsSUFBQUEsTUFBTSxFQUFFLENBSk47QUFLRkUsSUFBQUEsS0FBSyxFQUFFLENBTEw7QUFNRkQsSUFBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5ILEdBbE9TO0FBME9iLE1BQUk7QUFDRkosSUFBQUEsS0FBSyxFQUFFLGFBREw7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFNBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFLENBSEw7QUFJRkMsSUFBQUEsTUFBTSxFQUFFLENBSk47QUFLRkUsSUFBQUEsS0FBSyxFQUFFLENBTEw7QUFNRkQsSUFBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5ILEdBMU9TO0FBa1BiLE1BQUk7QUFDRkosSUFBQUEsS0FBSyxFQUFFLGFBREw7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFNBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFLENBSEw7QUFJRkMsSUFBQUEsTUFBTSxFQUFFLENBSk47QUFLRkUsSUFBQUEsS0FBSyxFQUFFLENBTEw7QUFNRkQsSUFBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5ILEdBbFBTO0FBMFBiLE1BQUk7QUFDRkosSUFBQUEsS0FBSyxFQUFFLGFBREw7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFNBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFLENBSEw7QUFJRkMsSUFBQUEsTUFBTSxFQUFFLENBSk47QUFLRkUsSUFBQUEsS0FBSyxFQUFFLENBTEw7QUFNRkQsSUFBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5ILEdBMVBTO0FBa1FiLE1BQUk7QUFDRkosSUFBQUEsS0FBSyxFQUFFLGFBREw7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFNBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFLENBSEw7QUFJRkMsSUFBQUEsTUFBTSxFQUFFLENBSk47QUFLRkUsSUFBQUEsS0FBSyxFQUFFLENBTEw7QUFNRkQsSUFBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5ILEdBbFFTO0FBMFFiLE1BQUk7QUFDRkosSUFBQUEsS0FBSyxFQUFFLGFBREw7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFNBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFLENBSEw7QUFJRkMsSUFBQUEsTUFBTSxFQUFFLENBSk47QUFLRkUsSUFBQUEsS0FBSyxFQUFFLENBTEw7QUFNRkQsSUFBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5ILEdBMVFTO0FBa1JiLE1BQUk7QUFDRkosSUFBQUEsS0FBSyxFQUFFLGFBREw7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFNBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFLENBSEw7QUFJRkMsSUFBQUEsTUFBTSxFQUFFLENBSk47QUFLRkUsSUFBQUEsS0FBSyxFQUFFLENBTEw7QUFNRkQsSUFBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5ILEdBbFJTO0FBMFJiLE1BQUk7QUFDRkosSUFBQUEsS0FBSyxFQUFFLGFBREw7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFNBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFLENBSEw7QUFJRkMsSUFBQUEsTUFBTSxFQUFFLENBSk47QUFLRkUsSUFBQUEsS0FBSyxFQUFFLENBTEw7QUFNRkQsSUFBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5ILEdBMVJTO0FBa1NiLE1BQUk7QUFDRkosSUFBQUEsS0FBSyxFQUFFLGFBREw7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFNBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFLENBSEw7QUFJRkMsSUFBQUEsTUFBTSxFQUFFLENBSk47QUFLRkUsSUFBQUEsS0FBSyxFQUFFLENBTEw7QUFNRkQsSUFBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5ILEdBbFNTO0FBMFNiLE1BQUk7QUFDRkosSUFBQUEsS0FBSyxFQUFFLGFBREw7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLFNBRko7QUFHRkMsSUFBQUEsS0FBSyxFQUFFLENBSEw7QUFJRkMsSUFBQUEsTUFBTSxFQUFFLENBSk47QUFLRkUsSUFBQUEsS0FBSyxFQUFFLENBTEw7QUFNRkQsSUFBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRDtBQU5IO0FBMVNTLENBQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXAtdmlld2VyLy4vYXNzZXRzL2pzL3RpbGVzLmpzP2Q4MmQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xyXG4gIDE6IHtcclxuICAgIGltYWdlOiBcInRpbGUtMS5wbmdcIixcclxuICAgIG5hbWU6IFwidGlsZS0xXCIsXHJcbiAgICB3aWR0aDogMSxcclxuICAgIGhlaWdodDogMSxcclxuICAgIGlkczogWzFdLFxyXG4gIH0sXHJcbiAgMjoge1xyXG4gICAgaW1hZ2U6IFwidGlsZS0yLnBuZ1wiLFxyXG4gICAgbmFtZTogXCJ0aWxlLTJcIixcclxuICAgIHdpZHRoOiAxLFxyXG4gICAgaGVpZ2h0OiAxLFxyXG4gICAgaWRzOiBbMl0sXHJcbiAgfSxcclxuICAzOiB7XHJcbiAgICBpbWFnZTogXCJ0aWxlLTMucG5nXCIsXHJcbiAgICBuYW1lOiBcInRpbGUtM1wiLFxyXG4gICAgd2lkdGg6IDIsXHJcbiAgICBoZWlnaHQ6IDIsXHJcbiAgICBpZHM6IFszLCA0LCA1LCA2XSxcclxuICB9LFxyXG4gIDQ6IHtcclxuICAgIGltYWdlOiBcInRpbGUtNC5wbmdcIixcclxuICAgIG5hbWU6IFwidGlsZS00XCIsXHJcbiAgICB3aWR0aDogMyxcclxuICAgIGhlaWdodDogMyxcclxuICAgIGlkczogWzcsIDgsIG51bGwsIDksIDEwLCAxMSwgMTIsIDEzLCAxNF0sXHJcbiAgfSxcclxuICA1OiB7XHJcbiAgICBpbWFnZTogXCJ0aWxlLTUucG5nXCIsXHJcbiAgICBuYW1lOiBcInRpbGUtNVwiLFxyXG4gICAgd2lkdGg6IDIsXHJcbiAgICBoZWlnaHQ6IDIsXHJcbiAgICBpZHM6IFsxNSwgMTYsIDE3LCAxOF0sXHJcbiAgfSxcclxuICA2OiB7XHJcbiAgICBpbWFnZTogXCJ0aWxlLTYucG5nXCIsXHJcbiAgICBuYW1lOiBcInRpbGUtNlwiLFxyXG4gICAgd2lkdGg6IDMsXHJcbiAgICBoZWlnaHQ6IDIsXHJcbiAgICBpZHM6IFsxOSwgMjAsIDIxLCAyMiwgMjMsIDI0XSxcclxuICB9LFxyXG4gIDc6IHtcclxuICAgIGltYWdlOiBcInRpbGUtNy5wbmdcIixcclxuICAgIG5hbWU6IFwidGlsZS03XCIsXHJcbiAgICB3aWR0aDogNCxcclxuICAgIGhlaWdodDogMyxcclxuICAgIGlkczogWzI1LCAyNiwgMjcsIDI4LCAyOSwgMzAsIDMxLCAzMiwgMzMsIDM0LCAzNSwgMzZdLFxyXG4gIH0sXHJcbiAgODoge1xyXG4gICAgaW1hZ2U6IFwidGlsZS04LnBuZ1wiLFxyXG4gICAgbmFtZTogXCJ0aWxlLThcIixcclxuICAgIHdpZHRoOiAyLFxyXG4gICAgaGVpZ2h0OiAxLFxyXG4gICAgaWRzOiBbMSwgMl0sXHJcbiAgfSxcclxuICA5OiB7XHJcbiAgICBpbWFnZTogXCJ0aWxlLTkucG5nXCIsXHJcbiAgICBuYW1lOiBcInRpbGUtOVwiLFxyXG4gICAgd2lkdGg6IDIsXHJcbiAgICBoZWlnaHQ6IDMsXHJcbiAgICBpZHM6IFsxLCAyLCAzLCA0LCA1LCA2XSxcclxuICB9LFxyXG4gIDEwOiB7XHJcbiAgICBpbWFnZTogXCJ0aWxlLTEwLnBuZ1wiLFxyXG4gICAgbmFtZTogXCJ0aWxlLTEwXCIsXHJcbiAgICB3aWR0aDogMixcclxuICAgIGhlaWdodDogMyxcclxuICAgIGxheWVyOiAwLFxyXG4gICAgaWRzOiBbMSwgMiwgMywgNF0sXHJcbiAgfSxcclxuICAxMToge1xyXG4gICAgaW1hZ2U6IFwidGlsZS0xMS5wbmdcIixcclxuICAgIG5hbWU6IFwidGlsZS0xMVwiLFxyXG4gICAgd2lkdGg6IDIsXHJcbiAgICBoZWlnaHQ6IDIsXHJcbiAgICBsYXllcjogMCxcclxuICAgIGlkczogWzEsIDIsIDMsIDRdLFxyXG4gIH0sXHJcbiAgMTI6IHtcclxuICAgIGltYWdlOiBcInRpbGUtMTIucG5nXCIsXHJcbiAgICBuYW1lOiBcInRpbGUtMTJcIixcclxuICAgIHdpZHRoOiAyLFxyXG4gICAgaGVpZ2h0OiAyLFxyXG4gICAgbGF5ZXI6IDAsXHJcbiAgICBpZHM6IFsxLCAyLCAzLCA0XSxcclxuICB9LFxyXG4gIDEzOiB7XHJcbiAgICBpbWFnZTogXCJ0aWxlLTEzLnBuZ1wiLFxyXG4gICAgbmFtZTogXCJ0aWxlLTEzXCIsXHJcbiAgICB3aWR0aDogMixcclxuICAgIGhlaWdodDogMSxcclxuICAgIGxheWVyOiAzLFxyXG4gICAgaWRzOiBbMSwgMl0sXHJcbiAgICBkaXNhYmxlZDogdHJ1ZSxcclxuICB9LFxyXG4gIDE0OiB7XHJcbiAgICBpbWFnZTogXCJ0aWxlLTE0LnBuZ1wiLFxyXG4gICAgbmFtZTogXCJ0aWxlLTE0XCIsXHJcbiAgICB3aWR0aDogMixcclxuICAgIGhlaWdodDogMSxcclxuICAgIGxheWVyOiAzLFxyXG4gICAgaWRzOiBbMSwgbnVsbF0sXHJcbiAgICBkaXNhYmxlZDogdHJ1ZSxcclxuICB9LFxyXG4gIDE1OiB7XHJcbiAgICBpbWFnZTogXCJ0aWxlLTE1LnBuZ1wiLFxyXG4gICAgbmFtZTogXCJ0aWxlLTE1XCIsXHJcbiAgICB3aWR0aDogMixcclxuICAgIGhlaWdodDogMixcclxuICAgIGxheWVyOiAwLFxyXG4gICAgaWRzOiBbMSwgMiwzLDRdLFxyXG4gIH0sXHJcbiAgOTk6IHtcclxuICAgIGltYWdlOiBcInRpbGUtZmluaXNoLnBuZ1wiLFxyXG4gICAgbmFtZTogXCJ0aWxlLWZpbmlzaFwiLFxyXG4gICAgd2lkdGg6IDIsXHJcbiAgICBoZWlnaHQ6IDEsXHJcbiAgICBsYXllcjogMCxcclxuICAgIGlkczogWzEsMl0sXHJcbiAgfSxcclxuICAzMDoge1xyXG4gICAgaW1hZ2U6IFwidGlsZS0zMC5wbmdcIixcclxuICAgIG5hbWU6IFwidGlsZS0zMFwiLFxyXG4gICAgd2lkdGg6IDEsXHJcbiAgICBoZWlnaHQ6IDEsXHJcbiAgICBsYXllcjogMixcclxuICAgIGlkczogWzFdLFxyXG4gIH0sXHJcbiAgMzE6IHtcclxuICAgIGltYWdlOiBcInRpbGUtMzEucG5nXCIsXHJcbiAgICBuYW1lOiBcInRpbGUtMzFcIixcclxuICAgIHdpZHRoOiAxLFxyXG4gICAgaGVpZ2h0OiAxLFxyXG4gICAgbGF5ZXI6IDIsXHJcbiAgICBpZHM6IFsxXSxcclxuICB9LFxyXG4gIDMyOiB7XHJcbiAgICBpbWFnZTogXCJ0aWxlLTMyLnBuZ1wiLFxyXG4gICAgbmFtZTogXCJ0aWxlLTMyXCIsXHJcbiAgICB3aWR0aDogMSxcclxuICAgIGhlaWdodDogMSxcclxuICAgIGxheWVyOiAyLFxyXG4gICAgaWRzOiBbMV0sXHJcbiAgfSxcclxuICAzMzoge1xyXG4gICAgaW1hZ2U6IFwidGlsZS0zMy5wbmdcIixcclxuICAgIG5hbWU6IFwidGlsZS0zM1wiLFxyXG4gICAgd2lkdGg6IDEsXHJcbiAgICBoZWlnaHQ6IDEsXHJcbiAgICBsYXllcjogMixcclxuICAgIGlkczogWzFdLFxyXG4gIH0sXHJcbiAgMzQ6IHtcclxuICAgIGltYWdlOiBcInRpbGUtMzQucG5nXCIsXHJcbiAgICBuYW1lOiBcInRpbGUtMzRcIixcclxuICAgIHdpZHRoOiAxLFxyXG4gICAgaGVpZ2h0OiAxLFxyXG4gICAgbGF5ZXI6IDIsXHJcbiAgICBpZHM6IFsxXSxcclxuICB9LFxyXG4gIDM1OiB7XHJcbiAgICBpbWFnZTogXCJ0aWxlLTM1LnBuZ1wiLFxyXG4gICAgbmFtZTogXCJ0aWxlLTM1XCIsXHJcbiAgICB3aWR0aDogMSxcclxuICAgIGhlaWdodDogMSxcclxuICAgIGxheWVyOiAyLFxyXG4gICAgaWRzOiBbMV0sXHJcbiAgfSxcclxuICAzNjoge1xyXG4gICAgaW1hZ2U6IFwidGlsZS0zNi5wbmdcIixcclxuICAgIG5hbWU6IFwidGlsZS0zNlwiLFxyXG4gICAgd2lkdGg6IDEsXHJcbiAgICBoZWlnaHQ6IDEsXHJcbiAgICBsYXllcjogMixcclxuICAgIGlkczogWzFdLFxyXG4gIH0sXHJcbiAgMzc6IHtcclxuICAgIGltYWdlOiBcInRpbGUtMzcucG5nXCIsXHJcbiAgICBuYW1lOiBcInRpbGUtMzdcIixcclxuICAgIHdpZHRoOiAxLFxyXG4gICAgaGVpZ2h0OiAxLFxyXG4gICAgbGF5ZXI6IDIsXHJcbiAgICBpZHM6IFsxXSxcclxuICB9LFxyXG4gIDM4OiB7XHJcbiAgICBpbWFnZTogXCJ0aWxlLTM4LnBuZ1wiLFxyXG4gICAgbmFtZTogXCJ0aWxlLTM4XCIsXHJcbiAgICB3aWR0aDogMSxcclxuICAgIGhlaWdodDogMSxcclxuICAgIGxheWVyOiAyLFxyXG4gICAgaWRzOiBbMV0sXHJcbiAgfSxcclxuICAzOToge1xyXG4gICAgaW1hZ2U6IFwidGlsZS0zOS5wbmdcIixcclxuICAgIG5hbWU6IFwidGlsZS0zOVwiLFxyXG4gICAgd2lkdGg6IDEsXHJcbiAgICBoZWlnaHQ6IDEsXHJcbiAgICBsYXllcjogMixcclxuICAgIGlkczogWzFdLFxyXG4gIH0sXHJcbiAgNDA6IHtcclxuICAgIGltYWdlOiBcInRpbGUtNDAucG5nXCIsXHJcbiAgICBuYW1lOiBcInRpbGUtNDBcIixcclxuICAgIHdpZHRoOiAxLFxyXG4gICAgaGVpZ2h0OiAxLFxyXG4gICAgbGF5ZXI6IDIsXHJcbiAgICBpZHM6IFsxXSxcclxuICB9LFxyXG4gIDQxOiB7XHJcbiAgICBpbWFnZTogXCJ0aWxlLTQxLnBuZ1wiLFxyXG4gICAgbmFtZTogXCJ0aWxlLTQxXCIsXHJcbiAgICB3aWR0aDogMSxcclxuICAgIGhlaWdodDogMSxcclxuICAgIGxheWVyOiAyLFxyXG4gICAgaWRzOiBbMV0sXHJcbiAgfSxcclxuICA0Mjoge1xyXG4gICAgaW1hZ2U6IFwidGlsZS00Mi5wbmdcIixcclxuICAgIG5hbWU6IFwidGlsZS00MlwiLFxyXG4gICAgd2lkdGg6IDEsXHJcbiAgICBoZWlnaHQ6IDEsXHJcbiAgICBsYXllcjogMixcclxuICAgIGlkczogWzFdLFxyXG4gIH0sXHJcbiAgNjA6IHtcclxuICAgIGltYWdlOiBcInRpbGUtNjAucG5nXCIsXHJcbiAgICBuYW1lOiBcInRpbGUtNjBcIixcclxuICAgIHdpZHRoOiAxLFxyXG4gICAgaGVpZ2h0OiAxLFxyXG4gICAgbGF5ZXI6IDEsXHJcbiAgICBpZHM6IFsxXSxcclxuICB9LFxyXG4gIDYxOiB7XHJcbiAgICBpbWFnZTogXCJ0aWxlLTYxLnBuZ1wiLFxyXG4gICAgbmFtZTogXCJ0aWxlLTYxXCIsXHJcbiAgICB3aWR0aDogMSxcclxuICAgIGhlaWdodDogMSxcclxuICAgIGxheWVyOiAxLFxyXG4gICAgaWRzOiBbMV0sXHJcbiAgfSxcclxuICA2Mjoge1xyXG4gICAgaW1hZ2U6IFwidGlsZS02Mi5wbmdcIixcclxuICAgIG5hbWU6IFwidGlsZS02MlwiLFxyXG4gICAgd2lkdGg6IDEsXHJcbiAgICBoZWlnaHQ6IDEsXHJcbiAgICBsYXllcjogMSxcclxuICAgIGlkczogWzFdLFxyXG4gIH0sXHJcbiAgNjM6IHtcclxuICAgIGltYWdlOiBcInRpbGUtNjMucG5nXCIsXHJcbiAgICBuYW1lOiBcInRpbGUtNjNcIixcclxuICAgIHdpZHRoOiAxLFxyXG4gICAgaGVpZ2h0OiAxLFxyXG4gICAgbGF5ZXI6IDEsXHJcbiAgICBpZHM6IFsxXSxcclxuICB9LFxyXG4gIDY0OiB7XHJcbiAgICBpbWFnZTogXCJ0aWxlLTY0LnBuZ1wiLFxyXG4gICAgbmFtZTogXCJ0aWxlLTY0XCIsXHJcbiAgICB3aWR0aDogMSxcclxuICAgIGhlaWdodDogMSxcclxuICAgIGxheWVyOiAxLFxyXG4gICAgaWRzOiBbMV0sXHJcbiAgfSxcclxuICA2NToge1xyXG4gICAgaW1hZ2U6IFwidGlsZS02NS5wbmdcIixcclxuICAgIG5hbWU6IFwidGlsZS02NVwiLFxyXG4gICAgd2lkdGg6IDEsXHJcbiAgICBoZWlnaHQ6IDEsXHJcbiAgICBsYXllcjogMSxcclxuICAgIGlkczogWzFdLFxyXG4gIH0sXHJcbiAgNjY6IHtcclxuICAgIGltYWdlOiBcInRpbGUtNjYucG5nXCIsXHJcbiAgICBuYW1lOiBcInRpbGUtNjZcIixcclxuICAgIHdpZHRoOiAxLFxyXG4gICAgaGVpZ2h0OiAxLFxyXG4gICAgbGF5ZXI6IDEsXHJcbiAgICBpZHM6IFsxXSxcclxuICB9LFxyXG4gIDY3OiB7XHJcbiAgICBpbWFnZTogXCJ0aWxlLTY3LnBuZ1wiLFxyXG4gICAgbmFtZTogXCJ0aWxlLTY3XCIsXHJcbiAgICB3aWR0aDogMSxcclxuICAgIGhlaWdodDogMSxcclxuICAgIGxheWVyOiAxLFxyXG4gICAgaWRzOiBbMV0sXHJcbiAgfSxcclxuICA2ODoge1xyXG4gICAgaW1hZ2U6IFwidGlsZS02OC5wbmdcIixcclxuICAgIG5hbWU6IFwidGlsZS02OFwiLFxyXG4gICAgd2lkdGg6IDEsXHJcbiAgICBoZWlnaHQ6IDEsXHJcbiAgICBsYXllcjogMSxcclxuICAgIGlkczogWzFdLFxyXG4gIH0sXHJcbiAgNjk6IHtcclxuICAgIGltYWdlOiBcInRpbGUtNjkucG5nXCIsXHJcbiAgICBuYW1lOiBcInRpbGUtNjlcIixcclxuICAgIHdpZHRoOiAxLFxyXG4gICAgaGVpZ2h0OiAxLFxyXG4gICAgbGF5ZXI6IDEsXHJcbiAgICBpZHM6IFsxXSxcclxuICB9LFxyXG59O1xyXG4iXSwibmFtZXMiOlsiaW1hZ2UiLCJuYW1lIiwid2lkdGgiLCJoZWlnaHQiLCJpZHMiLCJsYXllciIsImRpc2FibGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./assets/js/tiles.js\n");

/***/ }),

/***/ "./assets/js/toUnity.js":
/*!******************************!*\
  !*** ./assets/js/toUnity.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toUnity)\n/* harmony export */ });\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction unity_flip_anchor_point(anchor_point, tile_width, tile_height, flipX, flipY) {\n  if (flipX == 1) {\n    anchor_point[0] += tile_width - 1;\n  } else if (flipX != 0) {\n    console.error(\"Invalid flip X in toUnity\");\n  }\n\n  if (flipY == 1) {\n    anchor_point[1] += tile_height - 1;\n  } else if (flipY != 0) {\n    console.error(\"Invalid flip Y in toUnity\");\n  }\n\n  return anchor_point;\n}\n\nfunction unity_flip_tile(tile_pos, tile_width, tile_height, flipX, flipY) {\n  if (flipX == 1) {\n    tile_pos[0] = tile_width - 1 - tile_pos[0];\n  } else if (flipX != 0) {\n    console.error(\"Invalid flip X in toUnity\");\n  }\n\n  if (flipY == 1) {\n    tile_pos[1] = tile_height - 1 - tile_pos[1];\n  } else if (flipY != 0) {\n    console.error(\"Invalid flip Y in toUnity\");\n  }\n\n  return tile_pos;\n}\n\nfunction unity_rotate_anchor_point(anchor_point, tile_width, tile_height, rotation_factor) {\n  switch (rotation_factor % 4) {\n    case 0:\n      return anchor_point;\n      break;\n\n    case 1:\n      return [anchor_point[0] + (tile_height - 1), anchor_point[1]];\n      break;\n\n    case 2:\n      return [anchor_point[0] + (tile_width - 1), anchor_point[1] + (tile_height - 1)];\n      break;\n\n    case 3:\n      return [anchor_point[0], anchor_point[1] + (tile_width - 1)];\n      break;\n\n    default:\n      console.error(\"Invalid rotation in toUnity\");\n      break;\n  }\n}\n\nfunction unity_rotate_tile(relative_coord, rotation_factor) {\n  switch (rotation_factor % 4) {\n    case 0:\n      return relative_coord;\n      break;\n\n    case 1:\n      return [-Math.abs(relative_coord[1]), Math.abs(relative_coord[0])];\n      break;\n\n    case 2:\n      return [-Math.abs(relative_coord[0]), -Math.abs(relative_coord[1])];\n      break;\n\n    case 3:\n      return [relative_coord[1], -Math.abs(relative_coord[0])];\n      break;\n\n    default:\n      console.error(\"Invalid rotation in toUnity\");\n      break;\n  }\n}\n\nfunction unity_transform_tilesprite(tilesprite, width, height, tile_ids, name) {\n  var anchor_point = unity_rotate_anchor_point([tilesprite.x, tilesprite.y], width, height, tilesprite.rotation);\n  var tile_idx = 0;\n  var output = \"\";\n  var nulls_seen = 0;\n\n  for (var y = 0; y != height; y++) {\n    for (var x = 0; x != width; x++) {\n      var tile_id = tile_ids[tile_idx];\n      tile_idx++;\n\n      if (tile_id === null) {\n        nulls_seen++;\n        continue;\n      }\n\n      var relative_tile_pos = [x, y];\n      relative_tile_pos = unity_flip_tile(relative_tile_pos, width, height, tilesprite.flipX, tilesprite.flipY);\n      relative_tile_pos = unity_rotate_tile(relative_tile_pos, tilesprite.rotation);\n      var current_rot = tilesprite.rotation; // Don't open, dead inside, keep going, don't look\n\n      if (tilesprite.rotation % 2 == 1 && (tilesprite.flipX && !tilesprite.flipY || !tilesprite.flipX && tilesprite.flipY)) current_rot = (current_rot + 2) % 4;\n      relative_tile_pos[0] += anchor_point[0];\n      relative_tile_pos[1] += anchor_point[1];\n      var name_id = void 0;\n      console.log(tile_ids.filter(function (e) {\n        return e != null;\n      }), name);\n\n      if (height === 1 && width === 1 || tile_ids.filter(function (e) {\n        return e != null;\n      }).length == 1) {\n        name_id = \"\".concat(name);\n      } else {\n        name_id = \"\".concat(name, \"_\").concat(tile_idx - 1 - nulls_seen);\n      }\n\n      output += \"\".concat(relative_tile_pos[0], \" \").concat(-1 * relative_tile_pos[1], \" \").concat(current_rot, \" \").concat(tilesprite.flipX ? 1 : 0, \" \").concat(tilesprite.flipY ? 1 : 0, \" \").concat(tilesprite.layer, \" \").concat(name_id, \"\\n\");\n    }\n  }\n\n  return output;\n}\n\nfunction toUnity(value, tiles) {\n  var output = \"\";\n\n  var _iterator = _createForOfIteratorHelper(value),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var tile = _step.value;\n      var x = tile.x,\n          y = tile.y,\n          rotation = tile.rotation,\n          flipX = tile.flipX,\n          flipY = tile.flipY,\n          layer = tile.layer,\n          id = tile.id;\n      var _tiles$id = tiles[id],\n          name = _tiles$id.name,\n          image = _tiles$id.image,\n          width = _tiles$id.width,\n          height = _tiles$id.height,\n          ids = _tiles$id.ids;\n      output += unity_transform_tilesprite(tile, width, height, ids, name);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return output;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/toUnity.js\n");

/***/ }),

/***/ "./assets/scss/style.scss":
/*!********************************!*\
  !*** ./assets/scss/style.scss ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvc2Nzcy9zdHlsZS5zY3NzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL21hcC12aWV3ZXIvLi9hc3NldHMvc2Nzcy9zdHlsZS5zY3NzPzJjYzkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./assets/scss/style.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/build/js/bundle": 0,
/******/ 			"build/css/style": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkmap_viewer"] = self["webpackChunkmap_viewer"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["build/css/style"], () => (__webpack_require__("./assets/js/bundle.js")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["build/css/style"], () => (__webpack_require__("./assets/scss/style.scss")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;